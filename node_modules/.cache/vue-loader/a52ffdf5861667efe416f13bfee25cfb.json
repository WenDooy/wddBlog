{"remainingRequest":"C:\\wdd\\webstorm\\vue-project\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\wdd\\webstorm\\vue-project\\src\\components\\writeblog.vue?vue&type=style&index=0&id=0b455fa1&scoped=true&lang=css&","dependencies":[{"path":"C:\\wdd\\webstorm\\vue-project\\src\\components\\writeblog.vue","mtime":1593426360914},{"path":"C:\\wdd\\webstorm\\vue-project\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wdd\\webstorm\\vue-project\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\wdd\\webstorm\\vue-project\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\wdd\\webstorm\\vue-project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wdd\\webstorm\\vue-project\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5pbnB1dHsKICBtYXgtd2lkdGg6IDgwJTsKICBtYXJnaW46IDQwcHggYXV0byA0MHB4IGF1dG87CiAgdGV4dC1hbGlnbjogY2VudGVyOwp9Ci5pbnB1dC1uZXctdGFnewogIG1hcmdpbjogMTBweDsKfQoubWFya2Rvd257CiAgbWFyZ2luLWxlZnQ6IDEwdnc7CiAgbWFyZ2luLXJpZ2h0OiAxMHZ3Owp9Ci50YWdMaXN0ewogIHRleHQtYWxpZ246IGxlZnQ7CiAgbWFyZ2luOiAxMHB4Owp9Ci50YWd7CiAgbWFyZ2luLXJpZ2h0OiA1cHg7Cn0KLmJ1dHRvbnsKICBtYXJnaW4tYm90dG9tOiAzMHB4OwogIHRleHQtYWxpZ246IGNlbnRlcjsKfQo="},{"version":3,"sources":["writeblog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"writeblog.vue","sourceRoot":"src/components","sourcesContent":["<template>\n <div>\n   <div class=\"input\">\n     <el-input placeholder=\"文章标题\" v-model=\"article.title\"></el-input>\n\n     <el-input\n             style=\"margin-top: 30px\"\n             type=\"textarea\"\n             :rows=\"5\"\n             placeholder=\"文章简述\"\n             v-model=\"article.description\">\n     </el-input>\n   </div>\n\n\n\n   <app-mark-down class=\"markdown\"></app-mark-down>\n\n   <div class=\"input\">\n     <div class=\"tagList\">\n       <el-tag\n               class=\"tag\"\n               :key=\"tag\"\n               v-for=\"tag in article.tags\"\n               closable\n               :disable-transitions=\"false\"\n               @close=\"handleClose(tag)\">\n         {{tag}}\n       </el-tag>\n       <el-input\n               class=\"input-new-tag\"\n               v-if=\"inputVisible\"\n               v-model=\"inputValue\"\n               ref=\"saveTagInput\"\n               @keyup.enter.native=\"handleInputConfirm\"\n               @blur=\"handleInputConfirm\"\n       >\n       </el-input>\n       <el-button v-else class=\"button-new-tag\" size=\"small\" @click=\"showInput\">+ New Tag</el-button>\n     </div>\n   </div>\n\n   <div class=\"button\">\n     <el-button @click=\"publishEssay\">发布博客</el-button>\n     <el-button @click=\"returnHomePage\">返回首页</el-button>\n   </div>\n </div>\n</template>\n\n<script>\nimport markdown from '../components/markdown/index'\nimport {mapGetters} from  'vuex'\nexport default {\n  name: 'write',\n  data () {\n    return {\n      article: {\n        id: 0,\n        title: '',\n        content: '',\n        tags: [],\n        description: '',\n        create_time: '',\n        categoryId: ''\n      },\n      category: {\n        categoryName: '',\n        categoryId: 0\n      },\n      inputVisible: false,\n      inputValue: ''\n    }\n  },\n  components: {\n    appMarkDown: markdown\n  },\n  computed: {\n    ...mapGetters({\n      articleList: 'articleList',\n      categoryList:'categoryList',\n      articleContent: 'articleContent'\n    })\n  },\n  methods: {\n    publishEssay () {\n      let findItem = this.categoryList.find(element => element.categoryName === this.article.tags[0]);\n      console.log(this.categoryList.length)\n      if(findItem === undefined){\n        this.category = \n        this.article.categoryId = this.categoryList.length;\n        console.log(this.article.categoryId)\n        this.$store.dispatch('addCategory', this.article.tags[0], this.article.categoryId);\n      }\n      else{\n        this.article.categoryId = findItem.categoryId;\n      }\n      this.article.content = this.articleContent;\n      const length = this.articleList.length;\n      this.article.id = length;\n      this.article.create_time = this.getCreateTime();\n      console.log(this.article, this.categoryList)\n      this.$store.dispatch('publishEssay', this.article)\n    },\n    getCreateTime(){\n      // 比如需要这样的格式 yyyy-MM-dd hh:mm:ss\n      let date = new Date();\n      let year = date.getFullYear() + '-';\n      let month = (date.getMonth()+1 < 10 ? '0'+(date.getMonth()+1) : date.getMonth()+1) + '-';\n      let day = date.getDate() + ' ';\n      let hour = date.getHours() + ':';\n      let min = date.getMinutes() + ':';\n      let sec = date.getSeconds();\n      return year+month+day+hour+min+sec;\n    // 输出结果：2014-04-23 18:55:49\n    },\n    returnHomePage () {\n      this.$router.push({path: `/Home`})\n    },\n    handleClose(tag) {\n      this.article.tags.splice(this.article.tags.indexOf(tag), 1);\n    },\n\n    showInput() {\n      this.inputVisible = true;\n      this.$nextTick(() => {\n        this.$refs.saveTagInput.$refs.input.focus();\n      });\n    },\n\n    handleInputConfirm() {\n      let inputValue = this.inputValue;\n      if (inputValue) {\n        this.article.tags.push(inputValue);\n      }\n      this.inputVisible = false;\n      this.inputValue = '';\n    }\n  },\n  created() {\n    this.$store.dispatch('getArticle')\n    this.$store.dispatch('getCategory')\n  }\n}\n</script>\n<style scoped>\n  .input{\n    max-width: 80%;\n    margin: 40px auto 40px auto;\n    text-align: center;\n  }\n  .input-new-tag{\n    margin: 10px;\n  }\n  .markdown{\n    margin-left: 10vw;\n    margin-right: 10vw;\n  }\n  .tagList{\n    text-align: left;\n    margin: 10px;\n  }\n  .tag{\n    margin-right: 5px;\n  }\n  .button{\n    margin-bottom: 30px;\n    text-align: center;\n  }\n</style>\n"]}]}